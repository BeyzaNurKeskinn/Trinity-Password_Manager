spring.application.name=Trinity

# PostgreSQL Veritabanı
spring.datasource.url=jdbc:postgresql://${DB_HOST:db}:${DB_PORT:5432}/${DB_NAME:trinity}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD} # Varsayılan parola
spring.datasource.driver-class-name=org.postgresql.Driver

# Hibernate Ayarları
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# JWT ve Şifreleme
jwt.secret=${JWT_SECRET}
encryption.secret-key=${ENCRYPTION_SECRET_KEY}
jwt.expiration=86400000
jwt.refresh-token.expiration=604800000

# Loglama
logging.level.org.springframework.security=DEBUG
logging.level.com.project.Trinity=DEBUG

# E-posta Ayarları
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

#/* secret key oluşturmak için powershelle kopyala
#$RandomBytes = [System.Security.Cryptography.RandomNumberGenerator]::Create()Add commentMore actions
#$Bytes = [byte[]]::new(32)
#$RandomBytes.GetBytes($Bytes)
#[Convert]::ToBase64String($Bytes)


#$RandomBytes = [System.Security.Cryptography.RandomNumberGenerator]::Create()
#$Bytes = [byte[]]::new(16) # 16 bayt (AES-128 için)
#$RandomBytes.GetBytes($Bytes)
#[Convert]::ToBase64String($Bytes)

